service: pact-broker-serverless

provider:
  name: aws
  runtime: ruby2.5
  region: ${env:AWS_REGION}
  environment:
    PACT_BROKER_DATABASE_USERNAME: ${self:custom.AURORA.USERNAME}
    PACT_BROKER_DATABASE_PASSWORD:  ${self:custom.AURORA.PASSWORD}
    PACT_BROKER_DATABASE_HOST: ${self:custom.AURORA.HOST}
    PACT_BROKER_DATABASE_NAME: ${self:custom.AURORA.DB_NAME}
    PACT_BROKER_LOG_LEVEL: ${env:PACT_BROKER_LOG_LEVEL}
    PACT_BROKER_BASE_URL: ${env:PACT_BROKER_BASE_URL}
    RACK_ENV: production

plugins:
  - serverless-rack
  - serverless-ignore
  - serverless-apigw-binary

functions:
  api:
    timeout: 30
    handler: rack_adapter.handler
    layers:
      - arn:aws:lambda:ap-southeast-2:290556015539:layer:pgRuby25:1
    events: 
      - http: ANY /
      - http: ANY {proxy+} 
    vpc:
      securityGroupIds:
        - Fn::GetAtt: ServerlessVPC.DefaultSecurityGroup
      subnetIds:
        - Ref: ServerlessSubnetA
        - Ref: ServerlessSubnetB
        - Ref: ServerlessSubnetC

custom:
  ignore: true
  rack:
    configPath: pact_broker/config.ru
    enableBundler: false
    textMimeTypes:
      - application/hal+json
      - application/hal+json;charset=utf-8
      - application/font-woff;
      - application/xhtml+xml;
      - application/signed-exchange;
      - image/vnd.microsoft.icon;
      - application/octet-stream;
      - text/html;charset=utf-8
      - image/webp
      - image/apng
  apigwBinary:
    types:
      - 'image/webp'
      - 'image/apng'
      - 'image/jpeg'
      - 'text/html'
      - 'application/json'
      - 'application/hal+json'
      - 'application/xhtml+xml'
  AURORA:
    DB_NAME: pactbrokerserverlessdb
    USERNAME: master
    PASSWORD: password
    HOST:
      Fn::GetAtt: [AuroraRDSCluster, Endpoint.Address]
    PORT:
      Fn::GetAtt: [AuroraRDSCluster, Endpoint.Port]
    VPC_CIDR: 10


resources:
  Resources:
    ServerlessVPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: ${self:custom.AURORA.VPC_CIDR}.0.0.0/16
        EnableDnsSupport: true
        EnableDnsHostnames: true
        InstanceTenancy: default
    ServerlessSubnetA:
      DependsOn: ServerlessVPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: ServerlessVPC
        AvailabilityZone: ${self:provider.region}a
        CidrBlock: ${self:custom.AURORA.VPC_CIDR}.0.0.0/24
    ServerlessSubnetB:
      DependsOn: ServerlessVPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: ServerlessVPC
        AvailabilityZone: ${self:provider.region}b
        CidrBlock: ${self:custom.AURORA.VPC_CIDR}.0.1.0/24
    ServerlessSubnetC:
      DependsOn: ServerlessVPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: ServerlessVPC
        AvailabilityZone: ${self:provider.region}c
        CidrBlock: ${self:custom.AURORA.VPC_CIDR}.0.2.0/24
    # Aurora DB config
    AuroraSubnetGroup:
      Type: AWS::RDS::DBSubnetGroup
      Properties:
        DBSubnetGroupDescription: "Aurora Subnet Group"
        SubnetIds:
          - Ref: ServerlessSubnetA
          - Ref: ServerlessSubnetB
          - Ref: ServerlessSubnetC
    AuroraRDSClusterParameter:
      Type: AWS::RDS::DBClusterParameterGroup
      Properties:
        Description: Parameter group for the Serverless Aurora RDS DB.
        Family: aurora-postgresql11
        Parameters:
          timezone: Australia/Melbourne
    AuroraRDSInstanceParameter:
      Type: AWS::RDS::DBParameterGroup
      Properties:
        Description: Parameter group for the Serverless Aurora RDS DB.
        Family: aurora-postgresql11
        Parameters:
          application_name: "pactbroker"
    AuroraRDSCluster:
      Type: "AWS::RDS::DBCluster"
      Properties:
        MasterUsername: ${self:custom.AURORA.USERNAME}
        MasterUserPassword: ${self:custom.AURORA.PASSWORD}
        DBSubnetGroupName:
          Ref: AuroraSubnetGroup
        Engine: aurora-postgresql
        EngineVersion: "11.8"
        DatabaseName: ${self:custom.AURORA.DB_NAME}
        BackupRetentionPeriod: 3
        DBClusterParameterGroupName:
          Ref: AuroraRDSClusterParameter
        VpcSecurityGroupIds:
          - Fn::GetAtt: ServerlessVPC.DefaultSecurityGroup
    AuroraRDSInstance:
      Type: "AWS::RDS::DBInstance"
      Properties:
        DBInstanceClass: db.t3.medium
        DBSubnetGroupName:
          Ref: AuroraSubnetGroup
        Engine: aurora-postgresql
        EngineVersion: "11.8"
        PubliclyAccessible: false
        DBParameterGroupName:
          Ref: AuroraRDSInstanceParameter
        DBClusterIdentifier:
          Ref: AuroraRDSCluster